{
  "title": "Graph Summit 2023 - Digital Twin Workshop",
  "version": "2.3",
  "settings": {
    "pagenumber": 0,
    "editable": true,
    "fullscreenEnabled": true,
    "parameters": {
      "neodash_chapter_cityname": "",
      "neodash_countrycode": "NL",
      "neodash_operationpointname_name_1": "Frankfurt (Main) Hbf",
      "neodash_operationpointname_name_1_display": "Frankfurt (Main) Hbf",
      "neodash_station_name_1": "",
      "neodash_station_name_1_display": "",
      "neodash_operationpointname_name_2": "Amsterdam Centraal",
      "neodash_operationpointname_name_2_display": "Amsterdam Centraal",
      "neodash_operationpointname_name_3": "Amsterdam Centraal",
      "neodash_operationpointname_name_3_display": "Amsterdam Centraal",
      "neodash_field1": "Speed",
      "neodash_linkFoto": " https://lp-cms-production.imgix.net/2021-06/GettyRF_522935191.jpg?auto=format&q=75&w=1920",
      "neodash_speedtime": "sectionlength",
      "neodash_operationpointname_name_4": "Frankfurt (Main) Hbf",
      "neodash_operationpointname_name_4_display": "Frankfurt (Main) Hbf",
      "neodash_foto": " https://www.followmeaway.com/wp-content/uploads/2020/03/Hidden-Gems-in-Germany-Devils-Bridge-Rakotzbrucke.jpg",
      "neodash_web": "https://www.followmeaway.com/hidden-gems-in-germany/"
    },
    "disableRowLimiting": false,
    "theme": "light"
  },
  "pages": [
    {
      "title": "Graph Summit Digital Twin Overview",
      "reports": [
        {
          "title": "Countries in Graph",
          "query": "MATCH (op:OperationPoint)\nWITH substring(op.id,0,2) AS Countries\nRETURN DISTINCT Countries ORDER BY Countries;\n\n",
          "width": 3,
          "height": 4,
          "x": 0,
          "y": 1,
          "type": "table",
          "selection": {},
          "settings": {
            "actionsRules": [
              {
                "condition": "Click",
                "field": "Countries",
                "value": "Countries",
                "customization": "set variable",
                "customizationValue": "countrycode"
              }
            ],
            "compact": false,
            "description": "Countries that have data submitted to the EU portal."
          },
          "id": "6b46ac51-0fe3-4dcd-9bf1-8a5d65a0d9f4"
        },
        {
          "title": "Map on Tracks",
          "query": "MATCH (op:OperationPoint)\nWHERE op.id STARTS WITH $neodash_countrycode\nRETURN op;\n\n\n",
          "width": 9,
          "height": 4,
          "x": 3,
          "y": 1,
          "type": "map",
          "selection": {
            "OperationPoint": "(no label)",
            "Junction": "(no label)",
            "PassengerTerminal": "id",
            "SmallStation": "id",
            "Station": "id",
            "Switch": "id",
            "FreightTerminal": "id",
            "ShuntingYard": "id",
            "TrainTechnicalServices": "id",
            "DepotOrWorkshop": "id",
            "PrivateSiding": "id",
            "PassengerStop": "id"
          },
          "settings": {
            "autorun": true,
            "fullscreenEnabled": true,
            "defaultRelWidth": 1.5,
            "defaultNodeSize": "small",
            "description": "Track in country $neodash_countrycode"
          },
          "id": "2955b73d-8b92-445d-8e03-623ea07cc591",
          "schema": [
            [
              "OperationPoint",
              "id",
              "geolocation"
            ],
            [
              "Junction",
              "id",
              "geolocation"
            ],
            [
              "PassengerTerminal",
              "id",
              "geolocation"
            ],
            [
              "SmallStation",
              "id",
              "geolocation"
            ],
            [
              "Station",
              "id",
              "geolocation"
            ],
            [
              "Switch",
              "id",
              "geolocation"
            ],
            [
              "FreightTerminal",
              "id",
              "geolocation"
            ],
            [
              "ShuntingYard",
              "id",
              "geolocation"
            ],
            [
              "TrainTechnicalServices",
              "id",
              "geolocation"
            ],
            [
              "DepotOrWorkshop",
              "id",
              "geolocation"
            ],
            [
              "PrivateSiding",
              "id",
              "geolocation"
            ],
            [
              "PassengerStop",
              "id",
              "geolocation"
            ]
          ]
        },
        {
          "title": "Country Code shown",
          "query": "RETURN $neodash_countrycode\n\n\n",
          "width": 3,
          "height": 1,
          "x": 0,
          "y": 0,
          "type": "value",
          "selection": {},
          "settings": {
            "textAlign": "center",
            "verticalAlign": "middle"
          },
          "id": "d1afbdaa-7863-4c59-a6da-298a2ca28f73"
        },
        {
          "title": "Stations in country $neodash_countrycode",
          "query": "MATCH(op:OperationPoint)\nWHERE op.id STARTS WITH $neodash_countrycode \nAND labels(op)[1] IN ['Station','SmallStation'] \nRETURN count(op); \n\n\n",
          "width": 3,
          "height": 1,
          "x": 3,
          "y": 0,
          "type": "value",
          "selection": {},
          "settings": {
            "fontSize": 64,
            "textAlign": "center",
            "verticalAlign": "middle"
          },
          "id": "233aa5b7-b028-45e6-a54a-a9e5be8b2f6a"
        },
        {
          "title": "Switches in country $neodash_countrycode",
          "query": "MATCH(op:OperationPoint)\nWHERE op.id STARTS WITH $neodash_countrycode \nAND labels(op)[1] IN ['Switch','Junction'] \nRETURN count(op); \n\n\n",
          "width": 3,
          "height": 1,
          "x": 9,
          "y": 0,
          "type": "value",
          "selection": {},
          "settings": {
            "fontSize": 64,
            "textAlign": "center",
            "verticalAlign": "middle"
          },
          "id": "66753d2a-da64-4f5f-9b32-8491ebc34037"
        },
        {
          "title": "Stop Points in country $neodash_countrycode",
          "query": "MATCH(op:OperationPoint)\nWHERE op.id STARTS WITH $neodash_countrycode \nAND labels(op)[1] IN ['PassengerStop','PassengerTerminal'] \nRETURN count(op); \n\n\n",
          "width": 3,
          "height": 1,
          "x": 6,
          "y": 0,
          "type": "value",
          "selection": {},
          "settings": {
            "fontSize": 64,
            "textAlign": "center",
            "verticalAlign": "middle"
          },
          "id": "15fdae11-de7c-492c-ad17-aa85f4cb7e10"
        },
        {
          "title": "Station List",
          "query": "MATCH(op:OperationPoint)-[:NAMED]->(opn:OperationPointName)\nWHERE op.id STARTS WITH $neodash_countrycode \nAND labels(op)[1] IN ['Station','SmallStation'] \nRETURN opn.name AS Station\n\n\n",
          "width": 3,
          "height": 2,
          "x": 0,
          "y": 5,
          "type": "table",
          "selection": {},
          "settings": {
            "nodePositions": {}
          },
          "id": "9d99feff-d29c-47f5-b83a-01cb070f1e67"
        }
      ]
    },
    {
      "title": "Shortest Path Calculations",
      "reports": [
        {
          "title": "Start",
          "query": "MATCH (n:`OperationPointName`) \nWHERE toLower(toString(n.`name`)) CONTAINS toLower($input) \nRETURN DISTINCT n.`name` as value,  n.`name` as display ORDER BY size(toString(value)) ASC LIMIT 5",
          "width": 3,
          "height": 1,
          "x": 0,
          "y": 0,
          "type": "select",
          "selection": {},
          "settings": {
            "type": "Node Property",
            "entityType": "OperationPointName",
            "description": "Select a start station",
            "propertyType": "name",
            "propertyTypeDisplay": "name",
            "parameterName": "neodash_operationpointname_name_1",
            "id": "1"
          },
          "id": "cbf1d55b-6c58-4c55-a9e8-5536e46ef155"
        },
        {
          "title": "Destination",
          "query": "MATCH (n:`OperationPointName`) \nWHERE toLower(toString(n.`name`)) CONTAINS toLower($input) \nRETURN DISTINCT n.`name` as value,  n.`name` as display ORDER BY size(toString(value)) ASC LIMIT 5",
          "width": 3,
          "height": 1,
          "x": 3,
          "y": 0,
          "type": "select",
          "selection": {},
          "settings": {
            "type": "Node Property",
            "entityType": "OperationPointName",
            "description": "Select a start station",
            "propertyType": "name",
            "propertyTypeDisplay": "name",
            "parameterName": "neodash_operationpointname_name_2",
            "id": "2",
            "overridePropertyDisplayName": false,
            "manualPropertyNameSpecification": true
          },
          "id": "dadae7a8-477b-4ea6-a343-88116140b8c5"
        },
        {
          "title": "POIs on your Track",
          "query": "MATCH (:OperationPointName {name: $neodash_operationpointname_name_1})<-[:NAMED]-(op1:OperationPoint)\nWITH op1.id AS startid\nMATCH (:OperationPointName {name: $neodash_operationpointname_name_2})<-[:NAMED]-(op2:OperationPoint)\nWITH op2.id AS destid, startid\nMATCH (source:OperationPoint WHERE source.id = startid), (target:OperationPoint WHERE target.id = destid)\nCALL apoc.algo.dijkstra(source, target, 'SECTION', 'sectionlength') yield path as path\nWITH nodes(path) AS nodeset\nUNWIND nodeset AS nod\nMATCH(nod)-[:IS_NEAR]->(p:POI)\nRETURN count(p);",
          "width": 3,
          "height": 1,
          "x": 9,
          "y": 0,
          "type": "value",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "fontSize": 64,
            "actionsRules": [
              {
                "condition": "Click",
                "field": "\"Speed\"",
                "value": "speed",
                "customization": "set variable",
                "customizationValue": "field1"
              },
              {
                "condition": "Click",
                "field": "\"Length\"",
                "value": "sectionlength",
                "customization": "set variable",
                "customizationValue": "field1"
              }
            ],
            "textAlign": "center",
            "verticalAlign": "middle"
          },
          "id": "2c44ae38-33b3-4d25-8659-02366cfbcc0a"
        },
        {
          "title": "Shortest Path Track to travel",
          "query": "MATCH (:OperationPointName {name: $neodash_operationpointname_name_1})<-[:NAMED]-(op1:OperationPoint)\nWITH op1.id AS startid\nMATCH (:OperationPointName {name: $neodash_operationpointname_name_2})<-[:NAMED]-(op2:OperationPoint)\nWITH op2.id AS destid, startid\nMATCH (source:OperationPoint WHERE source.id = startid), (target:OperationPoint WHERE target.id = destid)\nCALL apoc.algo.dijkstra(source, target, 'SECTION', 'sectionlength') yield path as path\nRETURN path;\n\n\n",
          "width": 6,
          "height": 3,
          "x": 6,
          "y": 1,
          "type": "graph",
          "selection": {
            "OperationPoint": "id",
            "Station": "id",
            "Junction": "id",
            "PassengerStop": "id",
            "Switch": "id",
            "TechnicalChange": "id",
            "BorderPoint": "id",
            "SmallStation": "id",
            "PassengerTerminal": "id"
          },
          "settings": {
            "nodePositions": {}
          },
          "id": "38259c1d-82c4-425e-b6cf-924ff688a231",
          "schema": [
            [
              "OperationPoint",
              "id",
              "geolocation"
            ],
            [
              "Station",
              "id",
              "geolocation"
            ],
            [
              "Junction",
              "id",
              "geolocation"
            ],
            [
              "PassengerStop",
              "id",
              "geolocation"
            ],
            [
              "Switch",
              "id",
              "geolocation"
            ],
            [
              "TechnicalChange",
              "id",
              "geolocation"
            ],
            [
              "BorderPoint",
              "id",
              "geolocation"
            ],
            [
              "SmallStation",
              "id",
              "geolocation"
            ],
            [
              "PassengerTerminal",
              "id",
              "geolocation"
            ]
          ]
        },
        {
          "title": "Trip Length in km",
          "query": "MATCH (:OperationPointName {name: $neodash_operationpointname_name_1})<-[:NAMED]-(op1:OperationPoint)\nWITH op1.id AS startid\nMATCH (:OperationPointName {name: $neodash_operationpointname_name_2})<-[:NAMED]-(op2:OperationPoint)\nWITH op2.id AS destid, startid\n\nMATCH (source:OperationPoint WHERE source.id = startid), (target:OperationPoint WHERE target.id = destid)\nCALL apoc.algo.dijkstra(source, target, 'SECTION', 'sectionlength') yield path as path, weight as weight\nRETURN weight;",
          "width": 3,
          "height": 1,
          "x": 6,
          "y": 0,
          "type": "value",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "type": "Node Property",
            "entityType": "OperationPointName",
            "propertyType": "name",
            "propertyTypeDisplay": "name",
            "parameterName": "neodash_operationpointname_name_3",
            "id": "3",
            "verticalAlign": "middle",
            "textAlign": "center",
            "fontSize": 64
          },
          "id": "27eb023d-5bf9-4836-844b-730622f5b9a3"
        },
        {
          "title": "Travel Map",
          "query": "MATCH (:OperationPointName {name: $neodash_operationpointname_name_1})<-[:NAMED]-(op1:OperationPoint)\nWITH op1.id AS startid\nMATCH (:OperationPointName {name: $neodash_operationpointname_name_2})<-[:NAMED]-(op2:OperationPoint)\nWITH op2.id AS destid, startid\nMATCH (source:OperationPoint WHERE source.id = startid), (target:OperationPoint WHERE target.id = destid)\nCALL apoc.algo.dijkstra(source, target, 'SECTION', 'sectionlength') yield path as path\nRETURN path;\n\n\n",
          "width": 6,
          "height": 3,
          "x": 0,
          "y": 1,
          "type": "map",
          "selection": {
            "OperationPoint": "(no label)",
            "Station": "(no label)",
            "Junction": "(no label)",
            "PassengerStop": "(no label)",
            "Switch": "(no label)",
            "TechnicalChange": "id",
            "BorderPoint": "id",
            "SmallStation": "id",
            "PassengerTerminal": "id"
          },
          "settings": {
            "nodePositions": {},
            "separateOverlappingMarkers": true,
            "clusterMarkers": false,
            "defaultNodeSize": "medium"
          },
          "id": "6a75530c-37ec-4a56-8c6f-b95498cf1fd7",
          "schema": [
            [
              "OperationPoint",
              "id",
              "geolocation"
            ],
            [
              "Station",
              "id",
              "geolocation"
            ],
            [
              "Junction",
              "id",
              "geolocation"
            ],
            [
              "PassengerStop",
              "id",
              "geolocation"
            ],
            [
              "Switch",
              "id",
              "geolocation"
            ],
            [
              "TechnicalChange",
              "id",
              "geolocation"
            ],
            [
              "BorderPoint",
              "id",
              "geolocation"
            ],
            [
              "SmallStation",
              "id",
              "geolocation"
            ],
            [
              "PassengerTerminal",
              "id",
              "geolocation"
            ]
          ]
        },
        {
          "title": "POIs on the ride",
          "query": "MATCH (:OperationPointName {name: $neodash_operationpointname_name_1})<-[:NAMED]-(op1:OperationPoint)\nWITH op1.id AS startid\nMATCH (:OperationPointName {name: $neodash_operationpointname_name_2})<-[:NAMED]-(op2:OperationPoint)\nWITH op2.id AS destid, startid\nMATCH (source:OperationPoint WHERE source.id = startid), (target:OperationPoint WHERE target.id = destid)\nCALL apoc.algo.dijkstra(source, target, 'SECTION', 'sectionlength') yield path as path\nWITH nodes(path) AS nodeset\nUNWIND nodeset AS nod\nMATCH(nod)-[:IS_NEAR]->(p:POI)\nRETURN p.city AS City\n, p.description AS Description\n, ' ' + p.linkFoto AS __Foto;\n\n\n",
          "width": 4,
          "height": 4,
          "x": 0,
          "y": 4,
          "type": "table",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "actionsRules": [
              {
                "condition": "Click",
                "field": "City",
                "value": "__Foto",
                "customization": "set variable",
                "customizationValue": "linkFoto"
              }
            ],
            "columnWidths": "[0.5,1,0]"
          },
          "id": "48a245af-09a6-437c-bf2b-c80785aa6b47"
        },
        {
          "title": "POI Foto",
          "query": "![image]($neodash_linkFoto)\n\n",
          "width": 8,
          "height": 4,
          "x": 4,
          "y": 4,
          "type": "text",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "replaceGlobalParameters": true
          },
          "id": "0edb59bf-1450-441a-a554-2b83dde0640f"
        }
      ]
    },
    {
      "title": "Speed vs. Time",
      "reports": [
        {
          "title": "Start",
          "query": "MATCH (n:`OperationPointName`) \nWHERE toLower(toString(n.`name`)) CONTAINS toLower($input) \nRETURN DISTINCT n.`name` as value,  n.`name` as display ORDER BY size(toString(value)) ASC LIMIT 5",
          "width": 3,
          "height": 1,
          "x": 0,
          "y": 0,
          "type": "select",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "type": "Node Property",
            "entityType": "OperationPointName",
            "propertyType": "name",
            "propertyTypeDisplay": "name",
            "parameterName": "neodash_operationpointname_name_3",
            "id": "3"
          },
          "id": "dd833e35-625d-4084-ae71-464cdbebeef1"
        },
        {
          "title": "Destination",
          "query": "MATCH (n:`OperationPointName`) \nWHERE toLower(toString(n.`name`)) CONTAINS toLower($input) \nRETURN DISTINCT n.`name` as value,  n.`name` as display ORDER BY size(toString(value)) ASC LIMIT 5",
          "width": 3,
          "height": 1,
          "x": 3,
          "y": 0,
          "type": "select",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "type": "Node Property",
            "entityType": "OperationPointName",
            "propertyType": "name",
            "propertyTypeDisplay": "name",
            "parameterName": "neodash_operationpointname_name_4",
            "id": "4"
          },
          "id": "bce41430-c1e7-4fc8-b03c-5c806204457d"
        },
        {
          "title": "Select Speed OR Time",
          "query": "RETURN 'sectionlength' AS Shortest, 'traveltime' AS Fastest\n\n\n",
          "width": 3,
          "height": 1,
          "x": 6,
          "y": 0,
          "type": "table",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "actionsRules": [
              {
                "condition": "Click",
                "field": "Fastest",
                "value": "Fastest",
                "customization": "set variable",
                "customizationValue": "speedtime"
              },
              {
                "condition": "Click",
                "field": "Shortest",
                "value": "Shortest",
                "customization": "set variable",
                "customizationValue": "speedtime"
              }
            ]
          },
          "id": "ee8b1d7d-86f0-479f-bcbd-3dba7452f1a1"
        },
        {
          "title": "Calculation done for ",
          "query": "## Calculation done on:\n### $neodash_speedtime\n",
          "width": 3,
          "height": 1,
          "x": 9,
          "y": 0,
          "type": "text",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "replaceGlobalParameters": true
          },
          "id": "577c3c99-a11a-49d6-b053-1272c39b36e0"
        },
        {
          "title": "Travel by $neodash_speedtime",
          "query": "MATCH (:OperationPointName {name: $neodash_operationpointname_name_3})<-[:NAMED]-(op1:OperationPoint)\nWITH op1.id AS startid\nMATCH (:OperationPointName {name: $neodash_operationpointname_name_4})<-[:NAMED]-(op2:OperationPoint)\nWITH op2.id AS destid, startid\nMATCH (source:OperationPoint WHERE source.id = startid), (target:OperationPoint WHERE target.id = destid)\nCALL apoc.algo.dijkstra(source, target, 'SECTION', $neodash_speedtime) yield path as path\nRETURN path;\n\n\n",
          "width": 9,
          "height": 4,
          "x": 0,
          "y": 1,
          "type": "map",
          "selection": {
            "OperationPoint": "(no label)",
            "PassengerTerminal": "id",
            "Station": "(no label)",
            "Junction": "id",
            "SmallStation": "id",
            "Switch": "id",
            "BorderPoint": "id",
            "PassengerStop": "id",
            "TechnicalChange": "id"
          },
          "settings": {
            "nodePositions": {},
            "defaultNodeSize": "small",
            "description": "Track of your journey"
          },
          "id": "7e85e8c9-a7a9-4416-98ee-8d8127cfb853",
          "schema": [
            [
              "OperationPoint",
              "id",
              "geolocation"
            ],
            [
              "PassengerTerminal",
              "id",
              "geolocation"
            ],
            [
              "Station",
              "id",
              "geolocation"
            ],
            [
              "Junction",
              "id",
              "geolocation"
            ],
            [
              "SmallStation",
              "id",
              "geolocation"
            ],
            [
              "Switch",
              "id",
              "geolocation"
            ],
            [
              "BorderPoint",
              "id",
              "geolocation"
            ],
            [
              "PassengerStop",
              "id",
              "geolocation"
            ],
            [
              "TechnicalChange",
              "id",
              "geolocation"
            ]
          ]
        },
        {
          "title": "Travel Distance (km)",
          "query": "MATCH (:OperationPointName {name: $neodash_operationpointname_name_3})<-[:NAMED]-(op1:OperationPoint)\nWITH op1.id AS startid\nMATCH (:OperationPointName {name: $neodash_operationpointname_name_4})<-[:NAMED]-(op2:OperationPoint)\nWITH op2.id AS destid, startid\nMATCH (source:OperationPoint WHERE source.id = startid), (target:OperationPoint WHERE target.id = destid)\nCALL apoc.algo.dijkstra(source, target, 'SECTION', $neodash_speedtime) yield path as path, weight as weight\nWITH relationships(path) AS rels\nUNWIND rels AS rel\nRETURN sum(rel.sectionlength);\n\n\n",
          "width": 3,
          "height": 1,
          "x": 9,
          "y": 1,
          "type": "value",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "fontSize": 64,
            "textAlign": "center",
            "verticalAlign": "middle"
          },
          "id": "ec37fd6f-9fa0-4cd1-a847-c1c8a54ab7b1"
        },
        {
          "title": "Travel Time (h)",
          "query": "MATCH (:OperationPointName {name: $neodash_operationpointname_name_3})<-[:NAMED]-(op1:OperationPoint)\nWITH op1.id AS startid\nMATCH (:OperationPointName {name: $neodash_operationpointname_name_4})<-[:NAMED]-(op2:OperationPoint)\nWITH op2.id AS destid, startid\nMATCH (source:OperationPoint WHERE source.id = startid), (target:OperationPoint WHERE target.id = destid)\nCALL apoc.algo.dijkstra(source, target, 'SECTION', $neodash_speedtime) yield path as path, weight as weight\nWITH relationships(path) AS rels\nUNWIND rels AS rel\nRETURN sum(rel.traveltime)/3600;\n\n\n",
          "width": 3,
          "height": 1,
          "x": 9,
          "y": 2,
          "type": "value",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "fontSize": 64,
            "textAlign": "center",
            "verticalAlign": "middle"
          },
          "id": "808ed6fa-a023-460e-a49d-6dcc42de223e"
        },
        {
          "title": "",
          "query": "\n\n\n",
          "width": 3,
          "height": 2,
          "x": 9,
          "y": 3,
          "type": "text",
          "selection": {},
          "settings": {
            "nodePositions": {}
          },
          "id": "3aec12f7-f88d-457c-a828-8a64fc9992b1"
        }
      ]
    },
    {
      "title": "POI Overview",
      "reports": [
        {
          "title": "List of POIs",
          "query": "MATCH(po:POI)\nRETURN po.city AS City\n, po.description AS description\n, ' ' + po.linkFoto AS __Foto\n, po.linkWebSite AS Website ;\n\n\n\n",
          "width": 6,
          "height": 3,
          "x": 0,
          "y": 0,
          "type": "table",
          "selection": {},
          "settings": {
            "actionsRules": [
              {
                "condition": "Click",
                "field": "City",
                "value": "__Foto",
                "customization": "set variable",
                "customizationValue": "foto"
              }
            ],
            "columnWidths": "[1,1,0.5,0.5]"
          },
          "id": "a7fbdfd3-df0c-41a5-be67-33c3736e61ad"
        },
        {
          "title": "POI Foto",
          "query": "![image]($neodash_foto)\n\n\n",
          "width": 6,
          "height": 3,
          "x": 6,
          "y": 0,
          "type": "text",
          "selection": {},
          "settings": {
            "replaceGlobalParameters": true,
            "description": "POI Foto",
            "fullscreenEnabled": true
          },
          "id": "9da6c49c-a320-49c7-b0f8-e87dacd47480"
        },
        {
          "title": "Website (click on description button above)",
          "query": "$neodash_web\n\n\n",
          "width": 12,
          "height": 4,
          "x": 0,
          "y": 3,
          "type": "iframe",
          "selection": {},
          "settings": {
            "replaceGlobalParameters": false,
            "downloadImageEnabled": false,
            "passGlobalParameters": true,
            "fullscreenEnabled": false
          },
          "id": "0016a097-5dd3-469e-9503-00db14989d8a"
        }
      ]
    }
  ],
  "parameters": {},
  "extensions": {
    "advanced-charts": {
      "active": true
    },
    "styling": {
      "active": true
    },
    "active": true,
    "activeReducers": [
      "DASHBOARD/EXTENSIONS/QUERY_TRANSLATOR/"
    ],
    "actions": {
      "active": true
    },
    "query-translator": {
      "active": true
    }
  }
}